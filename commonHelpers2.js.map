{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet chosenDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const dateObject = new Date(selectedDates[0]);\n    const dateInMilliseconds = dateObject.getTime();\n\n    if (dateInMilliseconds < Date.now()) {\n      iziToast.warning({\n        title: 'Caution',\n        message: 'You must choose date from the future',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    chosenDate = dateInMilliseconds;\n    removeAttribute(startBtn, 'disabled');\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nconst startBtn = document.querySelector('[data-start]');\n\nstartBtn.addEventListener('click', onStart);\nsetAttribute(startBtn, 'disabled', true);\n\nfunction onStart() {\n  setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(\n      chosenDate - Date.now()\n    );\n\n    daysValue.textContent = addLeadingZero(days.toString());\n    hoursValue.textContent = addLeadingZero(hours.toString());\n    minutesValue.textContent = addLeadingZero(minutes.toString());\n    secondsValue.textContent = addLeadingZero(seconds.toString());\n  }, 1000);\n}\n\nfunction setAttribute(element, attribute, value) {\n  element.setAttribute(attribute, value);\n}\n\nfunction removeAttribute(element, attribute) {\n  element.removeAttribute(attribute);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  if (Number(value) > 10) {\n    return value;\n  }\n  return value.padStart(2, '0');\n}\n"],"names":["chosenDate","options","selectedDates","dateInMilliseconds","iziToast","removeAttribute","startBtn","flatpickr","daysValue","hoursValue","minutesValue","secondsValue","onStart","setAttribute","days","hours","minutes","seconds","convertMs","addLeadingZero","element","attribute","value","ms"],"mappings":"+IAMA,IAAIA,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CAErB,MAAMC,EADa,IAAI,KAAKD,EAAc,EAAE,EACN,UAEtC,GAAIC,EAAqB,KAAK,MAAO,CACnCC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,uCACT,SAAU,UAClB,CAAO,EACD,MACD,CAEDJ,EAAaG,EACbE,EAAgBC,EAAU,UAAU,CACrC,CACH,EAEAC,EAAU,mBAAoBN,CAAO,EAErC,MAAMO,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAEtDL,EAAW,SAAS,cAAc,cAAc,EAEtDA,EAAS,iBAAiB,QAASM,CAAO,EAC1CC,EAAaP,EAAU,WAAY,EAAI,EAEvC,SAASM,GAAU,CACjB,YAAY,IAAM,CAChB,KAAM,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EACxClB,EAAa,KAAK,IAAK,CAC7B,EAEIQ,EAAU,YAAcW,EAAeL,EAAK,SAAU,CAAA,EACtDL,EAAW,YAAcU,EAAeJ,EAAM,SAAU,CAAA,EACxDL,EAAa,YAAcS,EAAeH,EAAQ,SAAU,CAAA,EAC5DL,EAAa,YAAcQ,EAAeF,EAAQ,SAAU,CAAA,CAC7D,EAAE,GAAI,CACT,CAEA,SAASJ,EAAaO,EAASC,EAAWC,EAAO,CAC/CF,EAAQ,aAAaC,EAAWC,CAAK,CACvC,CAEA,SAASjB,EAAgBe,EAASC,EAAW,CAC3CD,EAAQ,gBAAgBC,CAAS,CACnC,CAEA,SAASH,EAAUK,EAAI,CAMrB,MAAMT,EAAO,KAAK,MAAMS,EAAK,KAAG,EAE1BR,EAAQ,KAAK,MAAOQ,EAAK,MAAO,IAAI,EAEpCP,EAAU,KAAK,MAAQO,EAAK,MAAO,KAAQ,GAAM,EAEjDN,EAAU,KAAK,MAASM,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAT,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeG,EAAO,CAC7B,OAAI,OAAOA,CAAK,EAAI,GACXA,EAEFA,EAAM,SAAS,EAAG,GAAG,CAC9B"}